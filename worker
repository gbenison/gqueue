#!/bin/sh

cd `dirname $0`/../.. ;

# read configuration variables, after setting defaults
n_tries=infinite           # Number of tries to attempt to run a job; integer or 'infinite'
start_delay=0              # delay (seconds) before the first attempt to start a job
idle_delay=$((10 * 60))    # delay (seconds) when there are no jobs waiting
restart_delay=$((5 * 60))  # delay (seconds) before restarting a failed job
test -f ./config && { . ./config; }

lockfile ./lockfile;

ungrabbed_queues=`for q in queues/*; do test -f $q/OWNER || echo $q/IN; done`;

# grab a job; sleep if none found
job_fname=`find $ungrabbed_queues -type f -exec basename {} \; | sort | head -1`;
if [[ "x${job_fname}" != "x" ]]; then
  job_path=`find $ungrabbed_queues -name $job_fname | head -1`;
  job_dir=`dirname $job_path`/..;

  owner_file=${job_dir}/OWNER;
  echo $$ > ${owner_file};

  mv $job_path ${job_dir}/RUNNING;
fi

rm -f ./lockfile;

logfile=${job_dir}/log/${job_fname}

## empty job? wait & terminate; else continue
test "x$job_fname" = "x" && { sleep $idle_delay; } || {
    # There's a job ready; run it
    sleep $start_delay;
    while test "$n_tries" != "0"; do
	echo "======= Start: `date` ==========" >> $logfile;
	${job_dir}/RUNNING/${job_fname} >> $logfile 2>&1 && break;
	sleep $restart_delay;
	test "$n_tries" = "infinite" || n_tries=$((n_tries - 1));
    done

    test "$n_tries" = "0" && { 
       echo "========== FAIL ===========" >> $logfile;
       mv ${job_dir}/RUNNING/${job_fname} ${job_dir}/FAILED;
    } || { 
       echo "======== End: `date` ======" >> $logfile;
       mv ${job_dir}/RUNNING/${job_fname} ${job_dir}/DONE;
    }

    rm ${owner_file};
}
